<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="CHC_Load_Test">
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">apigee.sab-dev-sh-l1-app-2020.dev.sabre-gcp.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">apigee.sab-dev-sh-l1-app-2020.dev.sabre-gcp.com, channelconnect.chc-int-fwd-rule.il7.us-east4.lb.sab-dev-sh-l1-app-2020.internal</stringProp>
          </elementProp>
          <elementProp name="Username" elementType="Argument">
            <stringProp name="Argument.name">Username</stringProp>
            <stringProp name="Argument.value">QATESTINTEG</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Password" elementType="Argument">
            <stringProp name="Argument.name">Password</stringProp>
            <stringProp name="Argument.value">Testinteg1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CardType" elementType="Argument">
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.name">CardType</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CardCode" elementType="Argument">
            <stringProp name="Argument.value">VI</stringProp>
            <stringProp name="Argument.name">CardCode</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CardNumber" elementType="Argument">
            <stringProp name="Argument.value">4111111111111111</stringProp>
            <stringProp name="Argument.name">CardNumber</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SeriesCode" elementType="Argument">
            <stringProp name="Argument.value">123</stringProp>
            <stringProp name="Argument.name">SeriesCode</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ExpiryDate" elementType="Argument">
            <stringProp name="Argument.value">0429</stringProp>
            <stringProp name="Argument.name">ExpiryDate</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Min" elementType="Argument">
            <stringProp name="Argument.name">Min</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Max" elementType="Argument">
            <stringProp name="Argument.name">Max</stringProp>
            <stringProp name="Argument.value">31</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Interface" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-472471449">
            <stringProp name="49617">210</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1572771">3600</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/interface/channelconnect.asmx</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.implementation"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_1H_SR" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>42.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
          <stringProp name="TestPlan.comments">42.0</stringProp>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_1H_SR" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_1H_SR_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; AvailRatesOnly=&quot;true&quot; MostRestrictiveAvailFailureOnly=&quot;false&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;false&quot;  RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-522469329">NumberOfUnits</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_1H_RF" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>24.5</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_1H_RF" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns1=&quot;http://www.opentravel.org/OTA/2003/05&quot; xmlns:ns2=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
   &lt;SOAP-ENV:Header&gt;&#xd;
      &lt;ns2:HTNGHeader&gt;&#xd;
         &lt;ns2:From&gt;&#xd;
            &lt;ns2:Credential&gt;&#xd;
               &lt;ns2:userName&gt;${Username}&lt;/ns2:userName&gt;&#xd;
               &lt;ns2:password&gt;${Password}&lt;/ns2:password&gt;&#xd;
            &lt;/ns2:Credential&gt;&#xd;
         &lt;/ns2:From&gt;&#xd;
      &lt;/ns2:HTNGHeader&gt;&#xd;
   &lt;/SOAP-ENV:Header&gt;&#xd;
   &lt;SOAP-ENV:Body&gt;&#xd;
      &lt;ns1:OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_1H_RF_${EchoToken}&quot; MaxResponses=&quot;0&quot; ExactMatchOnly=&quot;true&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;true&quot; HotelStayOnly=&quot;false&quot;&gt;&#xd;
         &lt;ns1:POS&gt;&#xd;
            &lt;ns1:Source&gt;&#xd;
               &lt;ns1:RequestorID ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;&gt;&#xd;
                  &lt;ns1:CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/ns1:RequestorID&gt;&#xd;
            &lt;/ns1:Source&gt;&#xd;
         &lt;/ns1:POS&gt;&#xd;
         &lt;ns1:AvailRequestSegments&gt;&#xd;
            &lt;ns1:AvailRequestSegment AvailReqType=&quot;nonroom&quot;&gt;&#xd;
               &lt;ns1:StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
               &lt;ns1:RatePlanCandidates&gt;&#xd;
                  &lt;ns1:RatePlanCandidate RatePlanFilterCode=&quot;${Rate_Filter}&quot;/&gt;&#xd;
               &lt;/ns1:RatePlanCandidates&gt;&#xd;
               &lt;ns1:RoomStayCandidates&gt;&#xd;
                  &lt;ns1:RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;ns1:GuestCounts&gt;&#xd;
                        &lt;ns1:GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                     &lt;/ns1:GuestCounts&gt;&#xd;
                  &lt;/ns1:RoomStayCandidate&gt;&#xd;
               &lt;/ns1:RoomStayCandidates&gt;&#xd;
               &lt;ns1:HotelSearchCriteria&gt;&#xd;
                  &lt;ns1:Criterion&gt;&#xd;
                     &lt;ns1:HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/ns1:Criterion&gt;&#xd;
               &lt;/ns1:HotelSearchCriteria&gt;&#xd;
            &lt;/ns1:AvailRequestSegment&gt;&#xd;
         &lt;/ns1:AvailRequestSegments&gt;&#xd;
      &lt;/ns1:OTA_HotelAvailRQ&gt;&#xd;
   &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-960574690">Price EffectiveDate</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_2H_SR" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>18.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_2H_SR" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
     &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_2H_SR_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-522469329">NumberOfUnits</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_3H_SR" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>14.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_3H_SR" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_3H_SR_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_3}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-522469329">NumberOfUnits</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_1H_Ota2004aservice" enabled="false">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.5</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_1H_Ota2004aservice" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_1H_Ota2004aservice_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;true&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1731676">Availability Status=&quot;Open&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelResRQ_ExistingGuest" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.25</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelResRQ_ExistingGuest" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
				&lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
				&lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;OTA_HotelResRQ_ExistingGuest_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot; &gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
					 &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
					 &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot; /&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
								&lt;PersonName&gt;&#xd;
									&lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
									&lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
									&lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
									&lt;Surname&gt;LoadTestResRQExistingGuest&lt;/Surname&gt;&#xd;
									&lt;NameSuffix&gt;&lt;/NameSuffix&gt;&#xd;
								&lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;CaseTwoNameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}_1@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;CHCLoadtestFNExistingGuest&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;CHCLoadtestLNExistingGuest&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;!--&lt;UserID ID=&quot;TestCaseTwo_CustomerUserId@LoadTest.com&quot; PinNumber=&quot;ResGuestPassword&quot;/&gt;--&gt;&#xd;
                              &lt;UserID ID=&quot;${Read_CRS_Num}&quot; PinNumber=&quot;${Read_CRS_Num}&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
							&lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
								&lt;CardHolderName&gt;LoadtestCaseTwo Cardholdername&lt;/CardHolderName&gt;&#xd;
							&lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2062687628">RatePlanName</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_10H_SR_HotelStayOnly" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.25</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_10H_SR_HotelStayOnly" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_10H_SR_HotelStayOnly_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;true&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_3}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_4}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_5}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_6}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_7}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_8}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_9}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_10}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1731676">Availability Status=&quot;Open&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_10H_SR_SummaryOnly" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.2</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_10H_SR_SummaryOnly" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_10H_SR_SummaryOnly_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;true&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_3}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_4}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_5}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_6}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_7}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_8}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_9}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_10}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-522469329">NumberOfUnits</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_1H_CPricing" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.2</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_1H_CPricing" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_1H_CPricing_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;true&quot; RequestedCurrency=&quot;USD&quot; PricingMethod=&quot;Lowest&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
               &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1731676">Availability Status=&quot;Open&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelAvailRQ_1H_ChildAges" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.2</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelAvailRQ_1H_ChildAges" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;OTA_HotelAvailRQ_1H_ChildAges_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
               &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;	&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;1&quot; Age=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;1&quot; Age=&quot;4&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-522469329">NumberOfUnits</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_ReadRQ" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.15</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_ReadRQ" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
				&lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
				&lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_ReadRQ ReturnListIndicator=&quot;true&quot; EchoToken=&quot;OTA_ReadRQ_${EchoToken}&quot; PrimaryLangID=&quot;en&quot; MaxResponses=&quot;0&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;ReadRequests&gt;&#xd;
            &lt;ReadRequest&gt;&#xd;
               &lt;UniqueID Type=&quot;14&quot; ID=&quot;${Read_CRS_Num}&quot; ID_Context=&quot;CrsConfirmationNumber&quot;/&gt;&#xd;
               &lt;Verification&gt;&#xd;
                  &lt;PersonName&gt;&#xd;
                     &lt;Surname&gt;${Read_Surname}&lt;/Surname&gt;&#xd;
                  &lt;/PersonName&gt;&#xd;
                  &lt;TPA_Extensions&gt;&#xd;
 					 &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot; /&gt;&#xd;
                  &lt;/TPA_Extensions&gt;&#xd;
               &lt;/Verification&gt;&#xd;
            &lt;/ReadRequest&gt;&#xd;
         &lt;/ReadRequests&gt;&#xd;
         &lt;POS&gt;&#xd;
           &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_ReadRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/ReadReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelDescriptiveInfoRQ">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.1</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelDescriptiveInfoRQ">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:SOAP-ENC=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;&gt;&#xd;
   &lt;SOAP-ENV:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;systemId/&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/SOAP-ENV:Header&gt;&#xd;
   &lt;SOAP-ENV:Body&gt;&#xd;
      &lt;OTA_HotelDescriptiveInfoRQ EchoToken=&quot;OTA_HotelDescriptiveInfoRQ_DescInfoRQ_${EchoToken}&quot; PrimaryLangID=&quot;en&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;HotelDescriptiveInfos&gt;&#xd;
            &lt;HotelDescriptiveInfo HotelCode=&quot;${Hotel_Id_1}&quot;&gt;&#xd;
               &lt;HotelInfo SendData=&quot;True&quot;/&gt;&#xd;
               &lt;FacilityInfo SendMeetingRooms=&quot;True&quot; SendGuestRooms=&quot;True&quot;/&gt;&#xd;
               &lt;Policies SendPolicies=&quot;True&quot;/&gt;&#xd;
               &lt;AreaInfo SendAttractions=&quot;True&quot;/&gt;&#xd;
            &lt;/HotelDescriptiveInfo&gt;&#xd;
         &lt;/HotelDescriptiveInfos&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_HotelDescriptiveInfoRQ&gt;&#xd;
   &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/GetHotelDetails&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-202516509">Success</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelResNotifRQ_CancelRQ" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.1</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelResNotifRQ" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;systemId&gt;TESTSYSTEMID-1&lt;/systemId&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
         &lt;timeStamp&gt;12:12:12&lt;/timeStamp&gt;&#xd;
         &lt;echoToken&gt;SHSLTELAB_ECHOTOKEN-1&lt;/echoToken&gt;&#xd;
         &lt;transactionId&gt;TRANSACTIONID-1&lt;/transactionId&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResNotifRQ PrimaryLangID=&quot;en&quot; EchoToken=&quot;OTA_HotelResNotifRQ_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorId&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;RoomRates&gt;&#xd;
                        &lt;RoomRate EffectiveDate=&quot;${Arrival}&quot; ExpireDate=&quot;${Departure}&quot;&gt;&#xd;
                           &lt;Rates&gt;&#xd;
                              &lt;Rate&gt;&#xd;
                                 &lt;Base AmountBeforeTax=&quot;100&quot; AmountAfterTax=&quot;110&quot; CurrencyCode=&quot;USD&quot;/&gt;&#xd;
                              &lt;/Rate&gt;&#xd;
                           &lt;/Rates&gt;&#xd;
                        &lt;/RoomRate&gt;&#xd;
                     &lt;/RoomRates&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile&gt;&#xd;
                              &lt;Customer&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;${surname}&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; ExpireDate=&quot;${ExpiryDate}&quot; SeriesCode=&quot;${SeriesCode}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;SHSLTELAB TESTBOOKER&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;1001&quot; ResID_Value=&quot;DC Test&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
               &lt;WrittenConfInst&gt;&#xd;
                  &lt;SupplementalData Name=&quot;EmailTemplateCode&quot;/&gt;&#xd;
               &lt;/WrittenConfInst&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResNotifRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">2</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">count</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservationsNotification&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);
String surname = &quot;CHCLoadTest&quot;+echoToken;

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);
vars.put(&quot;surname&quot;, surname);

int count = vars.get(&quot;count&quot;);

if(count%2==0)
{
	vars.put(&quot;Requestor_Id&quot;, &quot;6&quot;);
	vars.put(&quot;Channel_Code&quot;, &quot;SYDC&quot;);
}
else
{
	vars.put(&quot;Requestor_Id&quot;, &quot;6084&quot;);
	vars.put(&quot;Channel_Code&quot;, &quot;BKDNET&quot;);
}</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ConfirmationNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ConfirmationNo</stringProp>
              <stringProp name="RegexExtractor.regex">UniqueID Type=&quot;14&quot; ID=&quot;(.+?)&quot; ID_Context=&quot;CrsConfirmNumber&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Hotel-id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Hotel-id</stringProp>
              <stringProp name="RegexExtractor.regex">HotelCode=&quot;(.*?)&quot; HotelName=&quot;(.*?)&quot; ChainCode=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$$2$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1589837811">HotelReservationID ResID_Type=&quot;14</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import java.io.FileWriter;
import java.io.BufferedWriter;

FileWriter fw = new FileWriter(&quot;test.txt&quot;,true);
BufferedWriter bw = new BufferedWriter(fw);

String ConfirmationNo = vars.get(&quot;ConfirmationNo&quot;);
String HotelID = vars.get(&quot;Hotel-id_g1&quot;);
String surname = vars.get(&quot;surname&quot;);

bw.write(ConfirmationNo + &quot;,&quot; + surname + &quot;\n&quot;);

bw.close();
fw.close();</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_CancelRQ" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_CancelRQ EchoToken=&quot;OTA_CancelRQ_${EchoToken}&quot; Target=&quot;Test&quot; Version=&quot;1.000&quot; PrimaryLangID=&quot;en-us&quot; CancelType=&quot;Commit&quot; TimeStamp=&quot;2019-04-01T16:58:13+00:00&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;UniqueID Type=&quot;14&quot; ID=&quot;${ConfirmationNo}&quot; ID_Context=&quot;CrsConfirmNumber&quot;&gt;&#xd;
            &lt;CompanyName&gt;BKDNET&lt;/CompanyName&gt;&#xd;
         &lt;/UniqueID&gt;&#xd;
         &lt;Verification&gt;&#xd;
            &lt;TPA_Extensions&gt;&#xd;
               &lt;BasicPropertyInfo HotelCode=&quot;${Hotel-id_g1}&quot; ChainCode=&quot;&quot;/&gt;&#xd;
            &lt;/TPA_Extensions&gt;&#xd;
         &lt;/Verification&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_CancelRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CancelReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1277276011">UniqueID Type=&quot;15&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="OTA_HotelResRQ_1Guest" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.05</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OTA_HotelResRQ_1Guest" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;OTA_HotelResRQ_1Guest_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LTResRQ1Guest&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestSurname&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{{currentDateString}}_1@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;CHCLoadtestFN&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;CHCLoadtestLN&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${__time()}_1@LoadTest.com&quot; PinNumber=&quot;ResGuestPassword&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
               &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;CHCLoadtestFN CHCLoadtestlN&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Channel Connect Services" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="2009273872">
            <stringProp name="1598">20</stringProp>
            <stringProp name="0">0</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1572771">3600</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/ChannelConnect/api</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.implementation"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelAvailRQ_1H_SR" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>60.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelAvailRQ_1H_SR" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;API_HotelAvailRQ_1H_SR_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; AvailRatesOnly=&quot;true&quot; MostRestrictiveAvailFailureOnly=&quot;false&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;                        &#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="227590089">AvailableIndicator=&quot;true&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelAvailRQ_2H_SR" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>18.5</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelAvailRQ_2H_SR" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;API_HotelAvailRQ_2H_SR_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="227590089">AvailableIndicator=&quot;true&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelAvailRQ_3H_SR" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>18.5</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelAvailRQ_3H_SR" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;API_HotelAvailRQ_3H_SR_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_3}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="227590089">AvailableIndicator=&quot;true&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelAvailRQ_10H_SR_HotelStayOnly" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelAvailRQ_10H_SR_HotelStayOnly" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;API_HotelAvailRQ_10H_SR_HotelStayOnly_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;false&quot; HotelStayOnly=&quot;true&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_3}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_4}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_5}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_6}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_7}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_8}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_9}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_10}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1731676">Availability Status=&quot;Open&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelAvailRQ_10H_SR_SummaryOnly" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>1.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelAvailRQ_10H_SR_SummaryOnly" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:head=&quot;http://htng.org/1.1/Header/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelAvailRQ EchoToken=&quot;API_HotelAvailRQ_10H_SR_SummaryOnly_${EchoToken}&quot; MaxResponses=&quot;0&quot; PrimaryLangID=&quot;en&quot; ExactMatchOnly=&quot;false&quot; BestOnly=&quot;false&quot; SummaryOnly=&quot;true&quot; HotelStayOnly=&quot;false&quot; RequestedCurrency=&quot;USD&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;AvailRequestSegments&gt;&#xd;
            &lt;AvailRequestSegment&gt;&#xd;
               &lt;StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;	&#xd;
               &lt;RoomStayCandidates&gt;&#xd;
                  &lt;RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;8&quot; Count=&quot;0&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                  &lt;/RoomStayCandidate&gt;&#xd;
               &lt;/RoomStayCandidates&gt;&#xd;
               &lt;HotelSearchCriteria&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_2}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_3}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_4}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_5}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_6}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_7}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_8}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_9}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
                  &lt;Criterion&gt;&#xd;
                     &lt;HotelRef HotelCode=&quot;${Hotel_Id_10}&quot;/&gt;&#xd;
                  &lt;/Criterion&gt;&#xd;
               &lt;/HotelSearchCriteria&gt;&#xd;
            &lt;/AvailRequestSegment&gt;&#xd;
         &lt;/AvailRequestSegments&gt;&#xd;
      &lt;/OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="227590089">AvailableIndicator=&quot;true&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelResRQ" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.2</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResRQ" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;API_HotelResRQ_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot; ResStatus=&quot;Commit&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstAPICaseOne&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;V&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastAPICaseOne&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix&gt;II&lt;/NameSuffix&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;CustomerGivenNameCaseOne&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;CustomerSurnameCaseOne&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}_Customer@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;Rasberries district&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;JFK Street 34/12&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;Floor 9&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;456-6784&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;ContactGivenNameCaseOne&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;ContactSurnameCaseOne&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                        &lt;TPA_Extensions&gt;&#xd;
                           &lt;ResGuestInfo&gt;&#xd;
                              &lt;PersonName&gt;&#xd;
                                 &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                 &lt;GivenName&gt;ResGuestGivenNameCaseOne&lt;/GivenName&gt;&#xd;
                                 &lt;MiddleName&gt;J&lt;/MiddleName&gt;&#xd;
                                 &lt;Surname&gt;ResGuestLastNameCaseOne&lt;/Surname&gt;&#xd;
                                 &lt;NameSuffix&gt;III&lt;/NameSuffix&gt;&#xd;
                              &lt;/PersonName&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;222 333 444&quot;/&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;3&quot; PhoneNumber=&quot;333 444 555&quot;/&gt;&#xd;
                              &lt;Email EmailType=&quot;2&quot;&gt;${__time()}_ResGuest@LoadTest.com&lt;/Email&gt;&#xd;
                              &lt;Address Type=&quot;2&quot;&gt;&#xd;
                                 &lt;AddressLine&gt;CHC District&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;George Bush Jr. Street 34/98&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;Floor 17&lt;/AddressLine&gt;&#xd;
                                 &lt;CityName&gt;El Paso&lt;/CityName&gt;&#xd;
                                 &lt;PostalCode&gt;765-2341&lt;/PostalCode&gt;&#xd;
                                 &lt;StateProv StateCode=&quot;TX&quot;/&gt;&#xd;
                                 &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                              &lt;/Address&gt;&#xd;
                              &lt;ContactPerson&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;Case1ResGuestContactSurname&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/ContactPerson&gt;&#xd;
                           &lt;/ResGuestInfo&gt;&#xd;
                        &lt;/TPA_Extensions&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;ResGuestGivenNameCaseOne ResGuestLastNameCaseOne&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1183202619">CrsConfirmNumber</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_ReadRQ(Customer_Lookup)_Case4_0_4_1" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.2</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResRQ_Case_4_0" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;API_HotelResRQ_Case_4_0_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot; ResStatus=&quot;Commit&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;V&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix&gt;II&lt;/NameSuffix&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;John&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;Travolta&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;VincentVega@PulpFiction.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;Rasberries district&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;JFK Street 34/12&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;Floor 9&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;456-6784&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;Vic&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${__time()}@LoadTestOne.com&quot; PinNumber=&quot;LoadTestTC4_Password1&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                        &lt;TPA_Extensions&gt;&#xd;
                           &lt;ResGuestInfo&gt;&#xd;
                              &lt;PersonName&gt;&#xd;
                                 &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                 &lt;GivenName&gt;Jules&lt;/GivenName&gt;&#xd;
                                 &lt;MiddleName&gt;J&lt;/MiddleName&gt;&#xd;
                                 &lt;Surname&gt;Winnfield&lt;/Surname&gt;&#xd;
                                 &lt;NameSuffix&gt;III&lt;/NameSuffix&gt;&#xd;
                              &lt;/PersonName&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;222 333 444&quot;/&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;3&quot; PhoneNumber=&quot;333 444 555&quot;/&gt;&#xd;
                              &lt;Email EmailType=&quot;2&quot;&gt;Jules.Winnfield@PulpFiction.com&lt;/Email&gt;&#xd;
                              &lt;Address Type=&quot;2&quot;&gt;&#xd;
                                 &lt;AddressLine&gt;CHC District&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;George Bush Jr. Street 34/98&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;Floor 17&lt;/AddressLine&gt;&#xd;
                                 &lt;CityName&gt;El Paso&lt;/CityName&gt;&#xd;
                                 &lt;PostalCode&gt;765-2341&lt;/PostalCode&gt;&#xd;
                                 &lt;StateProv StateCode=&quot;TX&quot;/&gt;&#xd;
                                 &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                              &lt;/Address&gt;&#xd;
                              &lt;ContactPerson&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;Jimmie Dimmick&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/ContactPerson&gt;&#xd;
                           &lt;/ResGuestInfo&gt;&#xd;
                        &lt;/TPA_Extensions&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;V&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;Vega 2&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix&gt;II&lt;/NameSuffix&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;John&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;Travolta&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;VincentVega@PulpFiction.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;Rasberries district&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;JFK Street 34/12&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;Floor 9&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;456-6784&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;Vic&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${__time()}@LoadTestTwo.com&quot; PinNumber=&quot;LoadTestTC4_Password2&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                        &lt;TPA_Extensions&gt;&#xd;
                           &lt;ResGuestInfo&gt;&#xd;
                              &lt;PersonName&gt;&#xd;
                                 &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                 &lt;MiddleName&gt;J&lt;/MiddleName&gt;&#xd;
                                 &lt;Surname&gt;Winnfield2&lt;/Surname&gt;&#xd;
                              &lt;/PersonName&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;222 333 444&quot;/&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;3&quot; PhoneNumber=&quot;333 444 555&quot;/&gt;&#xd;
                              &lt;Email EmailType=&quot;2&quot;&gt;Jules.Winnfield@PulpFiction.com&lt;/Email&gt;&#xd;
                              &lt;Address Type=&quot;2&quot;&gt;&#xd;
                                 &lt;AddressLine&gt;CHC District&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;George Bush Jr. Street 34/98&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;Floor 17&lt;/AddressLine&gt;&#xd;
                                 &lt;CityName&gt;El Paso&lt;/CityName&gt;&#xd;
                                 &lt;PostalCode&gt;765-2341&lt;/PostalCode&gt;&#xd;
                                 &lt;StateProv StateCode=&quot;TX&quot;/&gt;&#xd;
                                 &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                              &lt;/Address&gt;&#xd;
                              &lt;ContactPerson&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;Jimmie Dimmick&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/ContactPerson&gt;&#xd;
                           &lt;/ResGuestInfo&gt;&#xd;
                        &lt;/TPA_Extensions&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;V&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;Vega3&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix&gt;II&lt;/NameSuffix&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;John&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;Travolta&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;VincentVega@PulpFiction.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;Rasberries district&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;JFK Street 34/12&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;Floor 9&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;456-6784&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;Vic&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${__time()}@LoadTestThree.com&quot; PinNumber=&quot;LoadTestTC4_Password3&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                        &lt;TPA_Extensions&gt;&#xd;
                           &lt;ResGuestInfo&gt;&#xd;
                              &lt;PersonName&gt;&#xd;
                                 &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                 &lt;GivenName&gt;Jules&lt;/GivenName&gt;&#xd;
                                 &lt;MiddleName&gt;J&lt;/MiddleName&gt;&#xd;
                                 &lt;Surname&gt;Winnfield3&lt;/Surname&gt;&#xd;
                                 &lt;NameSuffix&gt;III&lt;/NameSuffix&gt;&#xd;
                              &lt;/PersonName&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;222 333 444&quot;/&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;3&quot; PhoneNumber=&quot;333 444 555&quot;/&gt;&#xd;
                              &lt;Email EmailType=&quot;2&quot;&gt;Jules.Winnfield@PulpFiction.com&lt;/Email&gt;&#xd;
                              &lt;Address Type=&quot;2&quot;&gt;&#xd;
                                 &lt;AddressLine&gt;CHC District&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;George Bush Jr. Street 34/98&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;Floor 17&lt;/AddressLine&gt;&#xd;
                                 &lt;CityName&gt;El Paso&lt;/CityName&gt;&#xd;
                                 &lt;PostalCode&gt;765-2341&lt;/PostalCode&gt;&#xd;
                                 &lt;StateProv StateCode=&quot;TX&quot;/&gt;&#xd;
                                 &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                              &lt;/Address&gt;&#xd;
                              &lt;ContactPerson&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;Jimmie Dimmick&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/ContactPerson&gt;&#xd;
                           &lt;/ResGuestInfo&gt;&#xd;
                        &lt;/TPA_Extensions&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;ResGuestGivenNameCase4 ResGuestLastNameCase4&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CrsConfirmNumber" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_CrsConfirmNumber</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;UniqueID Type=&quot;14&quot; ID=&quot;(.+?)&quot; ID_Context</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="HotelCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_HotelCode</stringProp>
              <stringProp name="RegexExtractor.regex">HotelCode=&quot;(.+?)&quot; ChainCode</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ChainCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_ChainCode</stringProp>
              <stringProp name="RegexExtractor.regex">ChainCode=&quot;(.+?)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="RS_Surname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">RS_Surname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&lt;Surname&gt;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&lt;/Surname&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1183202619">CrsConfirmNumber</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_ReadRQ(Rez_Guest_Lookup)_Case4_0_4_1" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_ReadRQ ReturnListIndicator=&quot;true&quot; EchoToken=&quot;API_ReadRQ(Rez_Guest_Lookup)_Case4_0_4_1_${EchoToken}&quot; PrimaryLangID=&quot;en&quot; MaxResponses=&quot;0&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;ReadRequests&gt;&#xd;
            &lt;ReadRequest&gt;&#xd;
               &lt;UniqueID Type=&quot;14&quot; ID=&quot;${RS_CrsConfirmNumber}&quot; ID_Context=&quot;CrsConfirmationNumber&quot;/&gt;&#xd;
               &lt;Verification&gt;&#xd;
                  &lt;PersonName&gt;&#xd;
                     &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                     &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                  &lt;/PersonName&gt;&#xd;
                  &lt;TPA_Extensions&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                  &lt;/TPA_Extensions&gt;&#xd;
               &lt;/Verification&gt;&#xd;
            &lt;/ReadRequest&gt;&#xd;
         &lt;/ReadRequests&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_ReadRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/ReadReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_ReadRQ(Rez_Guest_Lookup)_Case4_0_4_2" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.2</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResRQ_Case_4_0" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;API_HotelResRQ_Case_4_0_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot; ResStatus=&quot;Commit&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;V&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix&gt;II&lt;/NameSuffix&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;John&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;Travolta&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;VincentVega@PulpFiction.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;Rasberries district&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;JFK Street 34/12&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;Floor 9&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;456-6784&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;Vic&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${__time()}@LoadTestOne.com&quot; PinNumber=&quot;LoadTestTC4_Password1&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                        &lt;TPA_Extensions&gt;&#xd;
                           &lt;ResGuestInfo&gt;&#xd;
                              &lt;PersonName&gt;&#xd;
                                 &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                 &lt;GivenName&gt;Jules&lt;/GivenName&gt;&#xd;
                                 &lt;MiddleName&gt;J&lt;/MiddleName&gt;&#xd;
                                 &lt;Surname&gt;Winnfield&lt;/Surname&gt;&#xd;
                                 &lt;NameSuffix&gt;III&lt;/NameSuffix&gt;&#xd;
                              &lt;/PersonName&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;222 333 444&quot;/&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;3&quot; PhoneNumber=&quot;333 444 555&quot;/&gt;&#xd;
                              &lt;Email EmailType=&quot;2&quot;&gt;Jules.Winnfield@PulpFiction.com&lt;/Email&gt;&#xd;
                              &lt;Address Type=&quot;2&quot;&gt;&#xd;
                                 &lt;AddressLine&gt;CHC District&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;George Bush Jr. Street 34/98&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;Floor 17&lt;/AddressLine&gt;&#xd;
                                 &lt;CityName&gt;El Paso&lt;/CityName&gt;&#xd;
                                 &lt;PostalCode&gt;765-2341&lt;/PostalCode&gt;&#xd;
                                 &lt;StateProv StateCode=&quot;TX&quot;/&gt;&#xd;
                                 &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                              &lt;/Address&gt;&#xd;
                              &lt;ContactPerson&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;Jimmie Dimmick&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/ContactPerson&gt;&#xd;
                           &lt;/ResGuestInfo&gt;&#xd;
                        &lt;/TPA_Extensions&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;V&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;Vega 2&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix&gt;II&lt;/NameSuffix&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;John&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;Travolta&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;VincentVega@PulpFiction.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;Rasberries district&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;JFK Street 34/12&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;Floor 9&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;456-6784&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;Vic&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${__time()}@LoadTestTwo.com&quot; PinNumber=&quot;LoadTestTC4_Password2&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                        &lt;TPA_Extensions&gt;&#xd;
                           &lt;ResGuestInfo&gt;&#xd;
                              &lt;PersonName&gt;&#xd;
                                 &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                 &lt;MiddleName&gt;J&lt;/MiddleName&gt;&#xd;
                                 &lt;Surname&gt;Winnfield2&lt;/Surname&gt;&#xd;
                              &lt;/PersonName&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;222 333 444&quot;/&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;3&quot; PhoneNumber=&quot;333 444 555&quot;/&gt;&#xd;
                              &lt;Email EmailType=&quot;2&quot;&gt;Jules.Winnfield@PulpFiction.com&lt;/Email&gt;&#xd;
                              &lt;Address Type=&quot;2&quot;&gt;&#xd;
                                 &lt;AddressLine&gt;CHC District&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;George Bush Jr. Street 34/98&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;Floor 17&lt;/AddressLine&gt;&#xd;
                                 &lt;CityName&gt;El Paso&lt;/CityName&gt;&#xd;
                                 &lt;PostalCode&gt;765-2341&lt;/PostalCode&gt;&#xd;
                                 &lt;StateProv StateCode=&quot;TX&quot;/&gt;&#xd;
                                 &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                              &lt;/Address&gt;&#xd;
                              &lt;ContactPerson&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;Jimmie Dimmick&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/ContactPerson&gt;&#xd;
                           &lt;/ResGuestInfo&gt;&#xd;
                        &lt;/TPA_Extensions&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;V&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;Vega3&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix&gt;II&lt;/NameSuffix&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;John&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;Travolta&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;VincentVega@PulpFiction.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;Rasberries district&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;JFK Street 34/12&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;Floor 9&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;456-6784&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;Vic&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${__time()}@LoadTestThree.com&quot; PinNumber=&quot;LoadTestTC4_Password3&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                        &lt;TPA_Extensions&gt;&#xd;
                           &lt;ResGuestInfo&gt;&#xd;
                              &lt;PersonName&gt;&#xd;
                                 &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                 &lt;GivenName&gt;Jules&lt;/GivenName&gt;&#xd;
                                 &lt;MiddleName&gt;J&lt;/MiddleName&gt;&#xd;
                                 &lt;Surname&gt;Winnfield3&lt;/Surname&gt;&#xd;
                                 &lt;NameSuffix&gt;III&lt;/NameSuffix&gt;&#xd;
                              &lt;/PersonName&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;222 333 444&quot;/&gt;&#xd;
                              &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;3&quot; PhoneNumber=&quot;333 444 555&quot;/&gt;&#xd;
                              &lt;Email EmailType=&quot;2&quot;&gt;Jules.Winnfield@PulpFiction.com&lt;/Email&gt;&#xd;
                              &lt;Address Type=&quot;2&quot;&gt;&#xd;
                                 &lt;AddressLine&gt;CHC District&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;George Bush Jr. Street 34/98&lt;/AddressLine&gt;&#xd;
                                 &lt;AddressLine&gt;Floor 17&lt;/AddressLine&gt;&#xd;
                                 &lt;CityName&gt;El Paso&lt;/CityName&gt;&#xd;
                                 &lt;PostalCode&gt;765-2341&lt;/PostalCode&gt;&#xd;
                                 &lt;StateProv StateCode=&quot;TX&quot;/&gt;&#xd;
                                 &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                              &lt;/Address&gt;&#xd;
                              &lt;ContactPerson&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;Jimmie Dimmick&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/ContactPerson&gt;&#xd;
                           &lt;/ResGuestInfo&gt;&#xd;
                        &lt;/TPA_Extensions&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;ResGuestGivenNameCase4 ResGuestLastNameCase4&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CrsConfirmNumber" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_CrsConfirmNumber</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;UniqueID Type=&quot;14&quot; ID=&quot;(.+?)&quot; ID_Context</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="HotelCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_HotelCode</stringProp>
              <stringProp name="RegexExtractor.regex">HotelCode=&quot;(.+?)&quot; ChainCode</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ChainCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_ChainCode</stringProp>
              <stringProp name="RegexExtractor.regex">ChainCode=&quot;(.+?)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="RS_Surname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">RS_Surname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&lt;Surname&gt;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&lt;/Surname&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default"></stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1183202619">CrsConfirmNumber</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_ReadRQ(Rez_Guest_Lookup)_Case4_0_4_1" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_ReadRQ ReturnListIndicator=&quot;true&quot; EchoToken=&quot;API_ReadRQ(Rez_Guest_Lookup)_Case4_0_4_1_${EchoToken}&quot; PrimaryLangID=&quot;en&quot; MaxResponses=&quot;0&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;ReadRequests&gt;&#xd;
            &lt;ReadRequest&gt;&#xd;
               &lt;UniqueID Type=&quot;14&quot; ID=&quot;${RS_CrsConfirmNumber}&quot; ID_Context=&quot;CrsConfirmationNumber&quot;/&gt;&#xd;
               &lt;Verification&gt;&#xd;
                  &lt;PersonName&gt;&#xd;
                     &lt;GivenName&gt;Vincent&lt;/GivenName&gt;&#xd;
                     &lt;Surname&gt;Vega&lt;/Surname&gt;&#xd;
                  &lt;/PersonName&gt;&#xd;
                  &lt;TPA_Extensions&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                  &lt;/TPA_Extensions&gt;&#xd;
               &lt;/Verification&gt;&#xd;
            &lt;/ReadRequest&gt;&#xd;
         &lt;/ReadRequests&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_ReadRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/ReadReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_ReadRQ(Rez_Guest_Lookup)_Case4_0_4_2" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_ReadRQ ReturnListIndicator=&quot;true&quot; EchoToken=&quot;API_ReadRQ(Rez_Guest_Lookup)_Case4_0_4_2_${EchoToken}&quot; PrimaryLangID=&quot;en&quot; MaxResponses=&quot;0&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;ReadRequests&gt;&#xd;
            &lt;ReadRequest&gt;&#xd;
               &lt;UniqueID Type=&quot;14&quot; ID=&quot;${RS_CrsConfirmNumber}&quot; ID_Context=&quot;CrsConfirmationNumber&quot;/&gt;&#xd;
               &lt;Verification&gt;&#xd;
                  &lt;PersonName&gt;&#xd;
                     &lt;Surname&gt;${RS_Surname}&lt;/Surname&gt;&#xd;
                  &lt;/PersonName&gt;&#xd;
                  &lt;TPA_Extensions&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                  &lt;/TPA_Extensions&gt;&#xd;
               &lt;/Verification&gt;&#xd;
            &lt;/ReadRequest&gt;&#xd;
         &lt;/ReadRequests&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_ReadRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/ReadReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelResRQ_CreateRez_ModifyRQ_15Guests" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.2</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResRQ_CreateRez_15_Guests" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;API_HotelResRQ_CreateRez_15_Guests_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot; ResStatus=&quot;Commit&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase31&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase31&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase31&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase31&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase32&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase32&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase32&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase32&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase33&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase33&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase33&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase33&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase34&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase34&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase34&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase34&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase35&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase35&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase35&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase35&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase36&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase36&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase36&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase36&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase37&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase37&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase37&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase37&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase38&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase38&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase38&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase38&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase39&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase39&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase39&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase39&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase40&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase40&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase40&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase40&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase41&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase41&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase41&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase41&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase42&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase42&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase42&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase42&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase43&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase43&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase43&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase43&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase44&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase44&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase44&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase44&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase45&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase45&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase45&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase45&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;ResGuestGivenNameCase3 ResGuestLastNameCase3&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CrsConfirmNumber" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_CrsConfirmNumber</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;UniqueID Type=&quot;14&quot; ID=&quot;(.+?)&quot; ID_Context</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RoomTypeCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_RoomTypeCode</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;RoomType RoomTypeCode=&quot;(.+?)&quot; NumberOfUnits</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RatePlanCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_RatePlanCode</stringProp>
              <stringProp name="RegexExtractor.regex">RatePlanCode=&quot;(.+?)&quot; RatePlanName</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="HotelCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_HotelCode</stringProp>
              <stringProp name="RegexExtractor.regex">HotelCode=&quot;(.+?)&quot; ChainCode</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ChainCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_ChainCode</stringProp>
              <stringProp name="RegexExtractor.regex">ChainCode=&quot;(.+?)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResRQ_ModifyRQ_15_Guests" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResModifyRQ PrimaryLangID=&quot;en&quot; EchoToken=&quot;API_HotelResRQ_ModifyRQ_15_Guests_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelResModifies&gt;&#xd;
            &lt;HotelResModify&gt;&#xd;
               &lt;UniqueID Type=&quot;14&quot; ID=&quot;${RS_CrsConfirmNumber}&quot; ID_Context=&quot;CrsConfirmNumber&quot;/&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}	&quot;/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX1&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX2&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX3&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX4&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX5&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX6&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX7&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX8&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX9&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX10&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX11&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX12&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX13&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX14&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTest&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestCaseTwoX15&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;NameType3&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTest&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;{__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadtestFirstName&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadtestLastName&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;ResGuestGivenNameCase4 ResGuestLastNameCase4&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1&quot; ResID_Value=&quot;{__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelResModify&gt;&#xd;
         &lt;/HotelResModifies&gt;&#xd;
      &lt;/OTA_HotelResModifyRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/ModifyReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelResRQ_CreateRez_15_Guests" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.1</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResRQ_CreateRez_15_Guests" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;API_HotelResRQ_CreateRez_15_Guests_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot; ResStatus=&quot;Commit&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase31&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase31&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase31&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase31&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase32&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase32&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase32&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase32&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase33&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase33&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase33&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase33&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase34&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase34&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase34&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase34&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase35&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase35&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase35&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase35&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase36&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase36&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase36&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase36&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase37&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase37&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase37&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase37&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase38&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase38&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase38&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase38&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase39&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase39&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase39&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase39&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase40&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase40&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase40&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase40&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase41&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase41&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase41&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase41&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase42&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase42&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase42&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase42&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase43&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase43&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase43&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase43&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase44&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase44&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase44&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase44&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase45&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase45&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestFirstNameCase45&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCase45&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestFirstNameCase3&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCase3&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;ResGuestGivenNameCase3 ResGuestLastNameCase3&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CrsConfirmNumber" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_CrsConfirmNumber</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;UniqueID Type=&quot;14&quot; ID=&quot;(.+?)&quot; ID_Context</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RoomTypeCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_RoomTypeCode</stringProp>
              <stringProp name="RegexExtractor.regex">&lt;RoomType RoomTypeCode=&quot;(.+?)&quot; NumberOfUnits</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RatePlanCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_RatePlanCode</stringProp>
              <stringProp name="RegexExtractor.regex">RatePlanCode=&quot;(.+?)&quot; RatePlanName</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="HotelCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_HotelCode</stringProp>
              <stringProp name="RegexExtractor.regex">HotelCode=&quot;(.+?)&quot; ChainCode</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ChainCode" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">RS_ChainCode</stringProp>
              <stringProp name="RegexExtractor.regex">ChainCode=&quot;(.+?)&quot;&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API_HotelResRQ_CustomerOnly" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.1</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResRQ_CustomerOnly" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResRQ EchoToken=&quot;API_HotelResRQ_CustomerOnly_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID_Context=&quot;Synxis&quot; ID=&quot;${Requestor_Id}&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot; ResStatus=&quot;Commit&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;GuestCounts IsPerRoom=&quot;true&quot;&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot; Duration=&quot;P1N&quot;/&gt;&#xd;
                     &lt;SpecialRequests/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                     &lt;Comments/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest PrimaryIndicator=&quot;true&quot;&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile ProfileType=&quot;1&quot;&gt;&#xd;
                              &lt;Customer Birthdate=&quot;01/01/0001 00:00:00&quot;&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;NamePrefix&gt;Mr.&lt;/NamePrefix&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestGivenNameCaseTwo&lt;/GivenName&gt;&#xd;
                                    &lt;MiddleName&gt;A&lt;/MiddleName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCaseTwo&lt;/Surname&gt;&#xd;
                                    &lt;NameSuffix/&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;PersonName NameType=&quot;3&quot;&gt;&#xd;
                                    &lt;GivenName&gt;LoadTestGivenNameCaseTwo&lt;/GivenName&gt;&#xd;
                                    &lt;Surname&gt;LoadTestLastNameCaseTwo&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;7&quot; PhoneTechType=&quot;5&quot; PhoneUseType=&quot;4&quot; PhoneNumber=&quot;666 555 777&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneLocationType=&quot;6&quot; PhoneTechType=&quot;1&quot; PhoneUseType=&quot;5&quot; PhoneNumber=&quot;111 222 333&quot;/&gt;&#xd;
                                 &lt;Telephone PhoneNumber=&quot;444 666 777&quot;/&gt;&#xd;
                                 &lt;Email EmailType=&quot;2&quot;&gt;${__time()}_1@LoadTest.com&lt;/Email&gt;&#xd;
                                 &lt;Address Type=&quot;1&quot; DefaultInd=&quot;true&quot; FormattedInd=&quot;false&quot; Remark=&quot;Home address&quot;&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 1&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 2&lt;/AddressLine&gt;&#xd;
                                    &lt;AddressLine&gt;LoadTestCase2 Address 3&lt;/AddressLine&gt;&#xd;
                                    &lt;CityName&gt;San Francisco&lt;/CityName&gt;&#xd;
                                    &lt;PostalCode&gt;12345&lt;/PostalCode&gt;&#xd;
                                    &lt;StateProv StateCode=&quot;CA&quot;/&gt;&#xd;
                                    &lt;CountryName Code=&quot;US&quot;/&gt;&#xd;
                                 &lt;/Address&gt;&#xd;
                                 &lt;ContactPerson&gt;&#xd;
                                    &lt;PersonName&gt;&#xd;
                                       &lt;GivenName&gt;LoadTestGivenNameCaseTwo&lt;/GivenName&gt;&#xd;
                                       &lt;Surname&gt;LoadTestLastNameCaseTwo&lt;/Surname&gt;&#xd;
                                    &lt;/PersonName&gt;&#xd;
                                 &lt;/ContactPerson&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                              &lt;UserID ID=&quot;${Read_CRS_Num}&quot; PinNumber=&quot;${Read_CRS_Num}&quot;/&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;LoadTestGivenNameCaseTwo LoadTestLastNameCaseTwo&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;14&quot; ResID_Source=&quot;1001&quot; ResID_Value=&quot;${__time()}&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2040331919">HotelReservationID ResID_Type=&quot;14&quot;</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.threads.UltimateThreadGroup guiclass="kg.apc.jmeter.threads.UltimateThreadGroupGui" testclass="kg.apc.jmeter.threads.UltimateThreadGroup" testname="Ctrip" enabled="false">
        <collectionProp name="ultimatethreadgroupdata">
          <collectionProp name="-1592030326">
            <stringProp name="53">5</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="1515111">1800</stringProp>
            <stringProp name="1572771">3600</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
        </collectionProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
      </kg.apc.jmeter.threads.UltimateThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/ctripservice/CtripService.svc</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.implementation"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Ctrip_HotelAvailRQ_1H_SR" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>60.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ctrip_HotelAvailRQ_1H_SR" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;ns:OTA_HotelAvailRQ EchoToken=&quot;Ctrip_HotelAvailRQ_1H_SR_${EchoToken}&quot; TimeStamp=&quot;${__time(yyyy-MM-dd)}T${__time(HH:MM:SS)}&quot; PrimaryLangID=&quot;en-us&quot;&gt;&#xd;
         &lt;ns:POS&gt;&#xd;
            &lt;ns:Source&gt;&#xd;
               &lt;ns:RequestorID ID=&quot;${Username}&quot; MessagePassword=&quot;${Password}&quot; Type=&quot;5&quot;&gt;&#xd;
                  &lt;ns:CompanyName Code=&quot;${Channel_Code}&quot; CodeContext=&quot;${Requestor_Id}&quot;/&gt;&#xd;
               &lt;/ns:RequestorID&gt;&#xd;
            &lt;/ns:Source&gt;&#xd;
         &lt;/ns:POS&gt;&#xd;
         &lt;ns:AvailRequestSegments&gt;&#xd;
            &lt;ns:AvailRequestSegment&gt;&#xd;
               &lt;ns:HotelSearchCriteria&gt;&#xd;
                  &lt;ns:Criterion&gt;&#xd;
                     &lt;ns:HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                     &lt;ns:StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
 &lt;!--                    &lt;ns:RatePlanCandidates&gt;&#xd;
                        &lt;ns:RatePlanCandidate&gt;&lt;/ns:RatePlanCandidate&gt;&#xd;
                     &lt;/ns:RatePlanCandidates&gt;--&gt;&#xd;
                     &lt;ns:RoomStayCandidates&gt;&#xd;
                        &lt;ns:RoomStayCandidate Quantity=&quot;1&quot;&gt;&#xd;
                           &lt;ns:GuestCounts&gt;&#xd;
                              &lt;ns:GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                           &lt;/ns:GuestCounts&gt;&#xd;
                        &lt;/ns:RoomStayCandidate&gt;&#xd;
                     &lt;/ns:RoomStayCandidates&gt;&#xd;
                  &lt;/ns:Criterion&gt;&#xd;
               &lt;/ns:HotelSearchCriteria&gt;&#xd;
            &lt;/ns:AvailRequestSegment&gt;&#xd;
         &lt;/ns:AvailRequestSegments&gt;&#xd;
      &lt;/ns:OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/CtripService/ICtripServiceContract/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="924012376">RoomRates</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Ctrip_HotelAvailRQ_1H_SR_Product" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>39.0</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ctrip_HotelAvailRQ_1H_SR_Product" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;ns:OTA_HotelAvailRQ EchoToken=&quot;Ctrip_HotelAvailRQ_1H_SR_Product_${EchoToken}&quot; TimeStamp=&quot;${__time(yyyy-MM-dd)}T${__time(HH:MM:SS)}&quot; PrimaryLangID=&quot;en-us&quot;&gt;&#xd;
         &lt;ns:POS&gt;&#xd;
            &lt;ns:Source&gt;&#xd;
               &lt;ns:RequestorID ID=&quot;${Username}&quot; MessagePassword=&quot;${Password}&quot; Type=&quot;5&quot;&gt;&#xd;
                  &lt;ns:CompanyName Code=&quot;${Channel_Code}&quot; CodeContext=&quot;${Requestor_Id}&quot;/&gt;&#xd;
               &lt;/ns:RequestorID&gt;&#xd;
            &lt;/ns:Source&gt;&#xd;
         &lt;/ns:POS&gt;&#xd;
         &lt;ns:AvailRequestSegments&gt;&#xd;
            &lt;ns:AvailRequestSegment&gt;&#xd;
               &lt;ns:HotelSearchCriteria&gt;&#xd;
                  &lt;ns:Criterion&gt;&#xd;
                     &lt;ns:HotelRef HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                     &lt;ns:StayDateRange Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
					 &lt;ns:RatePlanCandidates&gt;&#xd;
                        &lt;ns:RatePlanCandidate RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/ns:RatePlanCandidates&gt;&#xd;
                     &lt;ns:RoomStayCandidates&gt;&#xd;
						   &lt;ns:RoomStayCandidate RoomTypeCode=&quot;${Room_Code}&quot; Quantity=&quot;1&quot;&gt;&#xd;
                           &lt;ns:GuestCounts&gt;&#xd;
                              &lt;ns:GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                           &lt;/ns:GuestCounts&gt;&#xd;
                        &lt;/ns:RoomStayCandidate&gt;&#xd;
                     &lt;/ns:RoomStayCandidates&gt;&#xd;
                  &lt;/ns:Criterion&gt;&#xd;
               &lt;/ns:HotelSearchCriteria&gt;&#xd;
            &lt;/ns:AvailRequestSegment&gt;&#xd;
         &lt;/ns:AvailRequestSegments&gt;&#xd;
      &lt;/ns:OTA_HotelAvailRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/CtripService/ICtripServiceContract/CheckAvailability&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="924012376">RoomRates</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Ctrip_HotelResRQ" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.5</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ctrip_HotelResRQ" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ctr=&quot;http://synxis.com/CtripService/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;ns:OTA_HotelResRQ Version=&quot;2.1&quot; RetransmissionIndicator=&quot;false&quot; PrimaryLangID=&quot;en-us&quot; EchoToken=&quot;Ctrip_HotelResRQ_${EchoToken}&quot; TimeStamp=&quot;${__time(yyyy-MM-dd)}T${__time(HH:MM:SS)}&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;ns:POS&gt;&#xd;
            &lt;ns:Source&gt;&#xd;
               &lt;ns:RequestorID ID=&quot;${Username}&quot; MessagePassword=&quot;${Password}&quot; Type=&quot;5&quot;&gt;&#xd;
                  &lt;ns:CompanyName Code=&quot;${Channel_Code}&quot; CodeContext=&quot;${Requestor_Id}&quot;/&gt;&#xd;
               &lt;/ns:RequestorID&gt;&#xd;
            &lt;/ns:Source&gt;&#xd;
         &lt;/ns:POS&gt;&#xd;
         &lt;ns:UniqueID ID=&quot;${CtripUniqueID}&quot; Type=&quot;501&quot;/&gt;&#xd;
         &lt;ns:HotelReservations&gt;&#xd;
            &lt;ns:HotelReservation&gt;&#xd;
               &lt;ns:RoomStays&gt;&#xd;
                  &lt;ns:RoomStay&gt;&#xd;
                     &lt;ns:RatePlans&gt;&#xd;
                        &lt;ns:RatePlan RatePlanCode=&quot;${Rate_Code}&quot; RatePlanCategory=&quot;A&quot; PrepaidIndicator=&quot;true&quot;&gt;&#xd;
                        &lt;/ns:RatePlan&gt;&#xd;
                     &lt;/ns:RatePlans&gt;&#xd;
                     &lt;ns:RoomTypes&gt;&#xd;
                     	&lt;ns:RoomType RoomTypeCode=&quot;${Room_Code}&quot;/&gt;&#xd;
                     &lt;/ns:RoomTypes&gt;&#xd;
                     &lt;ns:RoomRates&gt;&#xd;
                        &lt;ns:RoomRate RoomTypeCode=&quot;${Room_Code}&quot; RatePlanCode=&quot;${Rate_Code}&quot; NumberOfUnits=&quot;1&quot;&gt;&#xd;
                           &lt;ns:Rates&gt;&#xd;
                              &lt;ns:Rate EffectiveDate=&quot;${Arrival}&quot; ExpireDate=&quot;${Departure}&quot;&gt;&#xd;
                                 &lt;ns:Base AmountBeforeTax=&quot;150.00&quot; AmountAfterTax=&quot;147.50&quot;/&gt;&#xd;
                              &lt;/ns:Rate&gt;&#xd;
                           &lt;/ns:Rates&gt;&#xd;
                        &lt;/ns:RoomRate&gt;&#xd;
                     &lt;/ns:RoomRates&gt;&#xd;
                     &lt;ns:BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/ns:RoomStay&gt;&#xd;
               &lt;/ns:RoomStays&gt;&#xd;
               &lt;ns:ResGuests&gt;&#xd;
                  &lt;ns:ResGuest ArrivalTime=&quot;14:30&quot;&gt;&#xd;
                     &lt;ns:Profiles&gt;&#xd;
                        &lt;ns:ProfileInfo&gt;&#xd;
                           &lt;ns:Profile&gt;&#xd;
                              &lt;ns:Customer&gt;&#xd;
                                 &lt;ns:PersonName&gt;&#xd;
                                    &lt;ns:GivenName&gt;CtripGivenName&lt;/ns:GivenName&gt;&#xd;
                                    &lt;ns:MiddleName&gt;CtripMiddleName&lt;/ns:MiddleName&gt;&#xd;
                                    &lt;ns:Surname&gt;CtripSurname&lt;/ns:Surname&gt;&#xd;
                                 &lt;/ns:PersonName&gt;&#xd;
                                 &lt;ns:ContactPerson ContactType=&quot;non&quot;&gt;&#xd;
                                    &lt;ns:PersonName&gt;&#xd;
                                       &lt;ns:GivenName&gt;CtripGivenName&lt;/ns:GivenName&gt;&#xd;
                                    &lt;/ns:PersonName&gt;&#xd;
                                    &lt;ns:Telephone PhoneNumber=&quot;8602165342213&quot;/&gt;&#xd;
                                    &lt;ns:Email&gt;chcloadtest@sabre.com&lt;/ns:Email&gt;&#xd;
                                 &lt;/ns:ContactPerson&gt;&#xd;
                              &lt;/ns:Customer&gt;&#xd;
                           &lt;/ns:Profile&gt;&#xd;
                        &lt;/ns:ProfileInfo&gt;&#xd;
                     &lt;/ns:Profiles&gt;&#xd;
                  &lt;/ns:ResGuest&gt;&#xd;
               &lt;/ns:ResGuests&gt;&#xd;
               &lt;ns:ResGlobalInfo&gt;&#xd;
                  &lt;ns:GuestCounts IsPerRoom=&quot;false&quot;&gt;&#xd;
                     &lt;ns:GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                  &lt;/ns:GuestCounts&gt;&#xd;
                  &lt;ns:TimeSpan End=&quot;${Departure}&quot; Start=&quot;${Arrival}&quot;/&gt;&#xd;
                  &lt;ns:SpecialRequests&gt;&#xd;
                     &lt;ns:SpecialRequest&gt;&#xd;
                        &lt;ns:Text Language=&quot;en-us&quot; TextFormat=&quot;PlainText&quot;&gt;Please provide extra robe&lt;/ns:Text&gt;&#xd;
                     &lt;/ns:SpecialRequest&gt;&#xd;
                  &lt;/ns:SpecialRequests&gt;&#xd;
                  &lt;ns:DepositPayments&gt;&#xd;
                     &lt;ns:GuaranteePayment&gt;&#xd;
                        &lt;ns:AcceptedPayments&gt;&#xd;
                           &lt;ns:AcceptedPayment&gt;&#xd;
                              &lt;ns:PaymentCard CardNumber=&quot;${CardNumber}&quot; ExpireDate=&quot;${ExpiryDate}&quot; CardCode=&quot;${CardCode}&quot; SeriesCode=&quot;${SeriesCode}&quot; CardType=&quot;${CardType}&quot; &gt;&#xd;
                                 &lt;ns:CardHolderName&gt;Ctrip&lt;/ns:CardHolderName&gt;&#xd;
                              &lt;/ns:PaymentCard&gt;&#xd;
                           &lt;/ns:AcceptedPayment&gt;&#xd;
                        &lt;/ns:AcceptedPayments&gt;&#xd;
                     &lt;/ns:GuaranteePayment&gt;&#xd;
                  &lt;/ns:DepositPayments&gt;&#xd;
                  &lt;ns:Guarantee&gt;&#xd;
                     &lt;ns:GuaranteesAccepted&gt;&#xd;
                        &lt;ns:GuaranteeAccepted&gt;&#xd;
                           &lt;ns:PaymentCard CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; CardType=&quot;${CardType}&quot; CardCode=&quot;${CardCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;ns:CardHolderName&gt;channelconnect laodtest&lt;/ns:CardHolderName&gt;&#xd;
                           &lt;/ns:PaymentCard&gt;&#xd;
                        &lt;/ns:GuaranteeAccepted&gt;&#xd;
                     &lt;/ns:GuaranteesAccepted&gt;&#xd;
                  &lt;/ns:Guarantee&gt;&#xd;
                  &lt;ns:Total AmountBeforeTax=&quot;150.00&quot; AmountAfterTax=&quot;147.50&quot; CurrencyCode=&quot;USD&quot;/&gt;&#xd;
                  &lt;ns:TPA_Extensions&gt;&#xd;
                     &lt;ns:IsReserved&gt;true&lt;/ns:IsReserved&gt;&#xd;
                  &lt;/ns:TPA_Extensions&gt;&#xd;
                  &lt;ns:HotelReservationIDs&gt;&#xd;
                     &lt;ns:HotelReservationID ResID_Type=&quot;505&quot; ResID_Value=&quot;111162&quot;/&gt;&#xd;
                     &lt;ns:HotelReservationID ResID_Value=&quot;56950d8c0e31889292bcd8e745c7c4c7&quot; ResID_Type=&quot;507&quot;/&gt;&#xd;
                  &lt;/ns:HotelReservationIDs&gt;&#xd;
               &lt;/ns:ResGlobalInfo&gt;&#xd;
            &lt;/ns:HotelReservation&gt;&#xd;
         &lt;/ns:HotelReservations&gt;&#xd;
      &lt;/ns:OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/CtripService/ICtripServiceContract/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="956201908">CtripUniqueID</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1312482543">
                  <stringProp name="-280601879">${__Random(00000001,99999991)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Ctrip_CrsConfirmNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Ctrip_CrsConfirmNo</stringProp>
              <stringProp name="RegexExtractor.regex">ResID_Type=&quot;502&quot; ResID_Value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Ctrip_ConfirmationNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Ctrip_ConfirmationNo</stringProp>
              <stringProp name="RegexExtractor.regex">ResID_Type=&quot;501&quot; ResID_Value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1833796523">HotelReservationID ResID_Type=&quot;502&quot; ResID_Value=</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Ctrip_HotelResRQ_CancelRQ" enabled="true">
          <intProp name="ThroughputController.style">1</intProp>
          <boolProp name="ThroughputController.perThread">false</boolProp>
          <intProp name="ThroughputController.maxThroughput">1</intProp>
          <FloatProperty>
            <name>ThroughputController.percentThroughput</name>
            <value>0.5</value>
            <savedValue>0.0</savedValue>
          </FloatProperty>
        </ThroughputController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ctrip_HotelResRQ" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ctr=&quot;http://synxis.com/CtripService/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;ns:OTA_HotelResRQ Version=&quot;2.1&quot; RetransmissionIndicator=&quot;false&quot; PrimaryLangID=&quot;en-us&quot; EchoToken=&quot;Ctrip_HotelResRQ_${EchoToken}&quot; TimeStamp=&quot;${__time(yyyy-MM-dd)}T${__time(HH:MM:SS)}&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;ns:POS&gt;&#xd;
            &lt;ns:Source&gt;&#xd;
               &lt;ns:RequestorID ID=&quot;${Username}&quot; MessagePassword=&quot;${Password}&quot; Type=&quot;5&quot;&gt;&#xd;
                  &lt;ns:CompanyName Code=&quot;${Channel_Code}&quot; CodeContext=&quot;${Requestor_Id}&quot;/&gt;&#xd;
               &lt;/ns:RequestorID&gt;&#xd;
            &lt;/ns:Source&gt;&#xd;
         &lt;/ns:POS&gt;&#xd;
         &lt;ns:UniqueID ID=&quot;${CtripUniqueID}&quot; Type=&quot;501&quot;/&gt;&#xd;
         &lt;ns:HotelReservations&gt;&#xd;
            &lt;ns:HotelReservation&gt;&#xd;
               &lt;ns:RoomStays&gt;&#xd;
                  &lt;ns:RoomStay&gt;&#xd;
                     &lt;ns:RatePlans&gt;&#xd;
                        &lt;ns:RatePlan RatePlanCode=&quot;${Rate_Code}&quot; RatePlanCategory=&quot;A&quot; PrepaidIndicator=&quot;true&quot;&gt;&#xd;
                        &lt;/ns:RatePlan&gt;&#xd;
                     &lt;/ns:RatePlans&gt;&#xd;
                     &lt;ns:RoomTypes&gt;&#xd;
                     	&lt;ns:RoomType RoomTypeCode=&quot;${Room_Code}&quot;/&gt;&#xd;
                     &lt;/ns:RoomTypes&gt;&#xd;
                     &lt;ns:RoomRates&gt;&#xd;
                        &lt;ns:RoomRate RoomTypeCode=&quot;${Room_Code}&quot; RatePlanCode=&quot;${Rate_Code}&quot; NumberOfUnits=&quot;1&quot;&gt;&#xd;
                           &lt;ns:Rates&gt;&#xd;
                              &lt;ns:Rate EffectiveDate=&quot;${Arrival}&quot; ExpireDate=&quot;${Departure}&quot;&gt;&#xd;
                                 &lt;ns:Base AmountBeforeTax=&quot;150.00&quot; AmountAfterTax=&quot;147.50&quot;/&gt;&#xd;
                              &lt;/ns:Rate&gt;&#xd;
                           &lt;/ns:Rates&gt;&#xd;
                        &lt;/ns:RoomRate&gt;&#xd;
                     &lt;/ns:RoomRates&gt;&#xd;
                     &lt;ns:BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot;/&gt;&#xd;
                  &lt;/ns:RoomStay&gt;&#xd;
               &lt;/ns:RoomStays&gt;&#xd;
               &lt;ns:ResGuests&gt;&#xd;
                  &lt;ns:ResGuest ArrivalTime=&quot;14:30&quot;&gt;&#xd;
                     &lt;ns:Profiles&gt;&#xd;
                        &lt;ns:ProfileInfo&gt;&#xd;
                           &lt;ns:Profile&gt;&#xd;
                              &lt;ns:Customer&gt;&#xd;
                                 &lt;ns:PersonName&gt;&#xd;
                                    &lt;ns:GivenName&gt;CtripGivenName&lt;/ns:GivenName&gt;&#xd;
                                    &lt;ns:MiddleName&gt;CtripMiddleName&lt;/ns:MiddleName&gt;&#xd;
                                    &lt;ns:Surname&gt;CtripSurname&lt;/ns:Surname&gt;&#xd;
                                 &lt;/ns:PersonName&gt;&#xd;
                                 &lt;ns:ContactPerson ContactType=&quot;non&quot;&gt;&#xd;
                                    &lt;ns:PersonName&gt;&#xd;
                                       &lt;ns:GivenName&gt;CtripGivenName&lt;/ns:GivenName&gt;&#xd;
                                    &lt;/ns:PersonName&gt;&#xd;
                                    &lt;ns:Telephone PhoneNumber=&quot;8602165342213&quot;/&gt;&#xd;
                                    &lt;ns:Email&gt;chcloadtest@sabre.com&lt;/ns:Email&gt;&#xd;
                                 &lt;/ns:ContactPerson&gt;&#xd;
                              &lt;/ns:Customer&gt;&#xd;
                           &lt;/ns:Profile&gt;&#xd;
                        &lt;/ns:ProfileInfo&gt;&#xd;
                     &lt;/ns:Profiles&gt;&#xd;
                  &lt;/ns:ResGuest&gt;&#xd;
               &lt;/ns:ResGuests&gt;&#xd;
               &lt;ns:ResGlobalInfo&gt;&#xd;
                  &lt;ns:GuestCounts IsPerRoom=&quot;false&quot;&gt;&#xd;
                     &lt;ns:GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;1&quot;/&gt;&#xd;
                  &lt;/ns:GuestCounts&gt;&#xd;
                  &lt;ns:TimeSpan End=&quot;${Departure}&quot; Start=&quot;${Arrival}&quot;/&gt;&#xd;
                  &lt;ns:SpecialRequests&gt;&#xd;
                     &lt;ns:SpecialRequest&gt;&#xd;
                        &lt;ns:Text Language=&quot;en-us&quot; TextFormat=&quot;PlainText&quot;&gt;Please provide extra robe&lt;/ns:Text&gt;&#xd;
                     &lt;/ns:SpecialRequest&gt;&#xd;
                  &lt;/ns:SpecialRequests&gt;&#xd;
                  &lt;ns:DepositPayments&gt;&#xd;
                     &lt;ns:GuaranteePayment&gt;&#xd;
                        &lt;ns:AcceptedPayments&gt;&#xd;
                           &lt;ns:AcceptedPayment&gt;&#xd;
                              &lt;ns:PaymentCard CardNumber=&quot;${CardNumber}&quot; ExpireDate=&quot;${ExpiryDate}&quot; CardCode=&quot;${CardCode}&quot; SeriesCode=&quot;${SeriesCode}&quot; CardType=&quot;${CardType}&quot; &gt;&#xd;
                                 &lt;ns:CardHolderName&gt;Ctrip&lt;/ns:CardHolderName&gt;&#xd;
                              &lt;/ns:PaymentCard&gt;&#xd;
                           &lt;/ns:AcceptedPayment&gt;&#xd;
                        &lt;/ns:AcceptedPayments&gt;&#xd;
                     &lt;/ns:GuaranteePayment&gt;&#xd;
                  &lt;/ns:DepositPayments&gt;&#xd;
                  &lt;ns:Guarantee&gt;&#xd;
                     &lt;ns:GuaranteesAccepted&gt;&#xd;
                        &lt;ns:GuaranteeAccepted&gt;&#xd;
                           &lt;ns:PaymentCard CardNumber=&quot;${CardNumber}&quot; SeriesCode=&quot;${SeriesCode}&quot; CardType=&quot;${CardType}&quot; CardCode=&quot;${CardCode}&quot; ExpireDate=&quot;${ExpiryDate}&quot;&gt;&#xd;
                              &lt;ns:CardHolderName&gt;channelconnect laodtest&lt;/ns:CardHolderName&gt;&#xd;
                           &lt;/ns:PaymentCard&gt;&#xd;
                        &lt;/ns:GuaranteeAccepted&gt;&#xd;
                     &lt;/ns:GuaranteesAccepted&gt;&#xd;
                  &lt;/ns:Guarantee&gt;&#xd;
                  &lt;ns:Total AmountBeforeTax=&quot;150.00&quot; AmountAfterTax=&quot;147.50&quot; CurrencyCode=&quot;USD&quot;/&gt;&#xd;
                  &lt;ns:TPA_Extensions&gt;&#xd;
                     &lt;ns:IsReserved&gt;true&lt;/ns:IsReserved&gt;&#xd;
                  &lt;/ns:TPA_Extensions&gt;&#xd;
                  &lt;ns:HotelReservationIDs&gt;&#xd;
                     &lt;ns:HotelReservationID ResID_Type=&quot;505&quot; ResID_Value=&quot;111162&quot;/&gt;&#xd;
                     &lt;ns:HotelReservationID ResID_Value=&quot;56950d8c0e31889292bcd8e745c7c4c7&quot; ResID_Type=&quot;507&quot;/&gt;&#xd;
                  &lt;/ns:HotelReservationIDs&gt;&#xd;
               &lt;/ns:ResGlobalInfo&gt;&#xd;
            &lt;/ns:HotelReservation&gt;&#xd;
         &lt;/ns:HotelReservations&gt;&#xd;
      &lt;/ns:OTA_HotelResRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/CtripService/ICtripServiceContract/CreateReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="956201908">CtripUniqueID</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1312482543">
                  <stringProp name="-280601879">${__Random(00000001,99999991)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Ctrip_CrsConfirmNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Ctrip_CrsConfirmNo</stringProp>
              <stringProp name="RegexExtractor.regex">ResID_Type=&quot;502&quot; ResID_Value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Ctrip_ConfirmationNo" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">Ctrip_ConfirmationNo</stringProp>
              <stringProp name="RegexExtractor.regex">ResID_Type=&quot;501&quot; ResID_Value=&quot;(.+?)&quot;/&gt;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.default"></stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1833796523">HotelReservationID ResID_Type=&quot;502&quot; ResID_Value=</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ctrip_CancelRQ" enabled="true">
            <intProp name="HTTPSampler.concurrentPool">6</intProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:ns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
   &lt;soap:Header/&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;ns:OTA_CancelRQ EchoToken=&quot;Ctrip_CancelRQ_${EchoToken}&quot; Version=&quot;2.2&quot; TimeStamp=&quot;${__time(yyyy-MM-dd)}T${__time(HH:MM:SS)}&quot; PrimaryLangID=&quot;en-us&quot;&gt;&#xd;
         &lt;ns:POS&gt;&#xd;
            &lt;ns:Source&gt;&#xd;
               &lt;ns:RequestorID ID=&quot;${Username}&quot; MessagePassword=&quot;${Password}&quot; Type=&quot;5&quot;&gt;&#xd;
                  &lt;ns:CompanyName Code=&quot;${Channel_Code}&quot; CodeContext=&quot;${Requestor_Id}&quot;/&gt;&#xd;
               &lt;/ns:RequestorID&gt;&#xd;
            &lt;/ns:Source&gt;&#xd;
         &lt;/ns:POS&gt;&#xd;
         &lt;ns:UniqueID ID=&quot;${Ctrip_ConfirmationNo}&quot; Type=&quot;501&quot;/&gt; &lt;!--Ctrip&apos;s confirmation code--&gt;&#xd;
         &lt;ns:UniqueID ID=&quot;${RS_CrsConfirmNo}&quot; Type=&quot;502&quot;/&gt; &lt;!--SynXis Itinerary or Confirmation Number--&gt;&#xd;
         &lt;ns:UniqueID ID=&quot;${Hotel_Id_1}&quot; Type=&quot;10&quot;/&gt; &lt;!--Partner&apos;s Hotel Code--&gt;&#xd;
         &lt;ns:Reasons&gt;&#xd;
           &lt;ns:Reason&gt;Test Cancel&lt;/ns:Reason&gt;&#xd;
         &lt;/ns:Reasons&gt;&#xd;
      &lt;/ns:OTA_CancelRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">&quot;http://synxis.com/CtripService/ICtripServiceContract/CancelReservations&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
              <stringProp name="scriptLanguage">groovy</stringProp>
            </JSR223PreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-946331203">UniqueID Type=&quot;502&quot; ID</stringProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Verify content in response</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/ChannelConnect/api</stringProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.implementation"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelResNotifRQ">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;systemId&gt;TESTSYSTEMID-1&lt;/systemId&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
         &lt;timeStamp&gt;12:12:12&lt;/timeStamp&gt;&#xd;
         &lt;echoToken&gt;SHSLTELAB_ECHOTOKEN-1&lt;/echoToken&gt;&#xd;
         &lt;transactionId&gt;TRANSACTIONID-1&lt;/transactionId&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_HotelResNotifRQ PrimaryLangID=&quot;en&quot; EchoToken=&quot;API_HotelResNotifRQ_${EchoToken}&quot; ResStatus=&quot;Commit&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorId&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
         &lt;HotelReservations&gt;&#xd;
            &lt;HotelReservation RoomStayReservation=&quot;true&quot;&gt;&#xd;
               &lt;RoomStays&gt;&#xd;
                  &lt;RoomStay&gt;&#xd;
                     &lt;RoomTypes&gt;&#xd;
                        &lt;RoomType RoomTypeCode=&quot;${Room_Code}&quot; NumberOfUnits=&quot;1&quot;/&gt;&#xd;
                     &lt;/RoomTypes&gt;&#xd;
                     &lt;RatePlans&gt;&#xd;
                        &lt;RatePlan RatePlanCode=&quot;${Rate_Code}&quot;/&gt;&#xd;
                     &lt;/RatePlans&gt;&#xd;
                     &lt;RoomRates&gt;&#xd;
                        &lt;RoomRate EffectiveDate=&quot;${Arrival}&quot; ExpireDate=&quot;${Departure}&quot;&gt;&#xd;
                           &lt;Rates&gt;&#xd;
                              &lt;Rate&gt;&#xd;
                                 &lt;Base AmountBeforeTax=&quot;100&quot; AmountAfterTax=&quot;110&quot; CurrencyCode=&quot;USD&quot;/&gt;&#xd;
                              &lt;/Rate&gt;&#xd;
                           &lt;/Rates&gt;&#xd;
                        &lt;/RoomRate&gt;&#xd;
                     &lt;/RoomRates&gt;&#xd;
                     &lt;GuestCounts&gt;&#xd;
                        &lt;GuestCount AgeQualifyingCode=&quot;10&quot; Count=&quot;2&quot;/&gt;&#xd;
                     &lt;/GuestCounts&gt;&#xd;
                     &lt;TimeSpan Start=&quot;${Arrival}&quot; End=&quot;${Departure}&quot;/&gt;&#xd;
                     &lt;BasicPropertyInfo HotelCode=&quot;${Hotel_Id_1}&quot; ChainCode=&quot;${Chain_Id}&quot;/&gt;&#xd;
                  &lt;/RoomStay&gt;&#xd;
               &lt;/RoomStays&gt;&#xd;
               &lt;ResGuests&gt;&#xd;
                  &lt;ResGuest&gt;&#xd;
                     &lt;Profiles&gt;&#xd;
                        &lt;ProfileInfo&gt;&#xd;
                           &lt;Profile&gt;&#xd;
                              &lt;Customer&gt;&#xd;
                                 &lt;PersonName&gt;&#xd;
                                    &lt;Surname&gt;${surname}&lt;/Surname&gt;&#xd;
                                 &lt;/PersonName&gt;&#xd;
                              &lt;/Customer&gt;&#xd;
                           &lt;/Profile&gt;&#xd;
                        &lt;/ProfileInfo&gt;&#xd;
                     &lt;/Profiles&gt;&#xd;
                  &lt;/ResGuest&gt;&#xd;
               &lt;/ResGuests&gt;&#xd;
               &lt;ResGlobalInfo&gt;&#xd;
                  &lt;Guarantee&gt;&#xd;
                     &lt;GuaranteesAccepted&gt;&#xd;
                        &lt;GuaranteeAccepted&gt;&#xd;
                           &lt;PaymentCard CardCode=&quot;${CardCode}&quot; CardNumber=&quot;${CardNumber}&quot; ExpireDate=&quot;${ExpiryDate}&quot; SeriesCode=&quot;${SeriesCode}&quot;&gt;&#xd;
                              &lt;CardHolderName&gt;SHSLTELAB TESTBOOKER&lt;/CardHolderName&gt;&#xd;
                           &lt;/PaymentCard&gt;&#xd;
                        &lt;/GuaranteeAccepted&gt;&#xd;
                     &lt;/GuaranteesAccepted&gt;&#xd;
                  &lt;/Guarantee&gt;&#xd;
                  &lt;HotelReservationIDs&gt;&#xd;
                     &lt;HotelReservationID ResID_Type=&quot;1001&quot; ResID_Value=&quot;DC Test&quot;/&gt;&#xd;
                  &lt;/HotelReservationIDs&gt;&#xd;
               &lt;/ResGlobalInfo&gt;&#xd;
               &lt;WrittenConfInst&gt;&#xd;
                  &lt;SupplementalData Name=&quot;EmailTemplateCode&quot;/&gt;&#xd;
               &lt;/WrittenConfInst&gt;&#xd;
            &lt;/HotelReservation&gt;&#xd;
         &lt;/HotelReservations&gt;&#xd;
      &lt;/OTA_HotelResNotifRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end">2</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">count</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CreateReservationsNotification&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);
String surname = &quot;CHCLoadTest&quot;+echoToken;

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);
vars.put(&quot;surname&quot;, surname);

int count = vars.get(&quot;count&quot;);

if(count%2==0)
{
	vars.put(&quot;Requestor_Id&quot;, &quot;6&quot;);
	vars.put(&quot;Channel_Code&quot;, &quot;SYDC&quot;);
}
else
{
	vars.put(&quot;Requestor_Id&quot;, &quot;6084&quot;);
	vars.put(&quot;Channel_Code&quot;, &quot;BKDNET&quot;);
}</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ConfirmationNo" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">ConfirmationNo</stringProp>
            <stringProp name="RegexExtractor.regex">UniqueID Type=&quot;14&quot; ID=&quot;(.+?)&quot; ID_Context=&quot;CrsConfirmNumber&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            <stringProp name="RegexExtractor.default"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Hotel-id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">Hotel-id</stringProp>
            <stringProp name="RegexExtractor.regex">HotelCode=&quot;(.*?)&quot; ChainCode=&quot;(.*?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$$2$</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            <stringProp name="RegexExtractor.default"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1589837811">HotelReservationID ResID_Type=&quot;14</stringProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Verify content in response</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.io.FileWriter;
import java.io.BufferedWriter;

FileWriter fw = new FileWriter(&quot;test.txt&quot;,true);
BufferedWriter bw = new BufferedWriter(fw);

String ConfirmationNo = vars.get(&quot;ConfirmationNo&quot;);
String HotelID = vars.get(&quot;Hotel-id_g1&quot;);
String surname = vars.get(&quot;surname&quot;);

bw.write(ConfirmationNo + &quot;,&quot; + surname + &quot;\n&quot;);

bw.close();
fw.close();</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_CancelRQ">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/soap:Header&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;OTA_CancelRQ EchoToken=&quot;API_CancelRQ_${EchoToken}&quot; Target=&quot;Test&quot; Version=&quot;1.000&quot; PrimaryLangID=&quot;en-us&quot; CancelType=&quot;Commit&quot; TimeStamp=&quot;2019-04-01T16:58:13+00:00&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;UniqueID Type=&quot;14&quot; ID=&quot;${ConfirmationNo}&quot; ID_Context=&quot;CrsConfirmNumber&quot;&gt;&#xd;
            &lt;CompanyName&gt;BKDNET&lt;/CompanyName&gt;&#xd;
         &lt;/UniqueID&gt;&#xd;
         &lt;Verification&gt;&#xd;
            &lt;TPA_Extensions&gt;&#xd;
               &lt;BasicPropertyInfo HotelCode=&quot;${Hotel-id_g1}&quot; ChainCode=&quot;&quot;/&gt;&#xd;
            &lt;/TPA_Extensions&gt;&#xd;
         &lt;/Verification&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorID ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;&gt;&#xd;
                  &lt;CompanyName Code=&quot;${Channel_Code}&quot;/&gt;&#xd;
               &lt;/RequestorID&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_CancelRQ&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/CancelReservations&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1277276011">UniqueID Type=&quot;15&quot;</stringProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Verify content in response</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API_HotelDescriptiveInfoRQ">
          <intProp name="HTTPSampler.concurrentPool">6</intProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:SOAP-ENC=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;&gt;&#xd;
   &lt;SOAP-ENV:Header&gt;&#xd;
      &lt;HTNGHeader xmlns=&quot;http://htng.org/1.1/Header/&quot;&gt;&#xd;
         &lt;From&gt;&#xd;
            &lt;systemId/&gt;&#xd;
            &lt;Credential&gt;&#xd;
               &lt;userName&gt;${Username}&lt;/userName&gt;&#xd;
               &lt;password&gt;${Password}&lt;/password&gt;&#xd;
            &lt;/Credential&gt;&#xd;
         &lt;/From&gt;&#xd;
      &lt;/HTNGHeader&gt;&#xd;
   &lt;/SOAP-ENV:Header&gt;&#xd;
   &lt;SOAP-ENV:Body&gt;&#xd;
      &lt;OTA_HotelDescriptiveInfoRQ EchoToken=&quot;API_HotelDescriptiveInfoRQ_${EchoToken}&quot; PrimaryLangID=&quot;en&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot;&gt;&#xd;
         &lt;HotelDescriptiveInfos&gt;&#xd;
            &lt;HotelDescriptiveInfo HotelCode=&quot;${Hotel_Id_1}&quot;&gt;&#xd;
               &lt;HotelInfo SendData=&quot;True&quot;/&gt;&#xd;
               &lt;FacilityInfo SendMeetingRooms=&quot;True&quot; SendGuestRooms=&quot;True&quot;/&gt;&#xd;
               &lt;Policies SendPolicies=&quot;True&quot;/&gt;&#xd;
               &lt;AreaInfo SendAttractions=&quot;True&quot;/&gt;&#xd;
            &lt;/HotelDescriptiveInfo&gt;&#xd;
         &lt;/HotelDescriptiveInfos&gt;&#xd;
         &lt;POS&gt;&#xd;
            &lt;Source&gt;&#xd;
               &lt;RequestorId ID=&quot;${Requestor_Id}&quot; ID_Context=&quot;Synxis&quot;/&gt;&#xd;
            &lt;/Source&gt;&#xd;
         &lt;/POS&gt;&#xd;
      &lt;/OTA_HotelDescriptiveInfoRQ&gt;&#xd;
   &lt;/SOAP-ENV:Body&gt;&#xd;
&lt;/SOAP-ENV:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/xml; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">&quot;http://synxis.com/OTA2004AService/GetHotelDetails&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import java.time.LocalDate;
import java.time.LocalDateTime;

LocalDate startDateBooking = LocalDate.now().plusDays(1);
LocalDate endDateBooking = startDateBooking.plusDays(${__Random(${Min},${Max},)});
String echoToken = LocalDateTime.now().format(&quot;yyyyMMddHHmmssSSSS&quot;);

vars.put(&quot;Arrival&quot;, startDateBooking.toString());
vars.put(&quot;Departure&quot;, endDateBooking.toString());
vars.put(&quot;EchoToken&quot;, echoToken);</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-202516509">Success</stringProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Verify content in response</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="filename">CHC_Load_Test.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames"></stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
        <stringProp name="scriptLanguage">groovy</stringProp>
        <stringProp name="parameters">${__P(ignore_ramping_time_results,true)}  ${__P(testResultToIgnoreBeforeInMin,30)} ${__P(testResultToIgnoreAfterInMin,90)}</stringProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="cacheKey">true</stringProp>
        <stringProp name="script">if(args[0].toBoolean()){
    float testResultToIgnoreBeforeInMin=args[1].toFloat()
    float testResultToIgnoreAfterInMin=args[2].toFloat()
    double testResultToIgnoreBeforeInMillis=testResultToIgnoreBeforeInMin*60*1000
    double testResultToIgnoreAfterInMillis=testResultToIgnoreAfterInMin*60*1000
    double startTimeInMillis=vars.get(&quot;TESTSTART.MS&quot;).toLong()
    double currentTimeInMillis = new Date().getTime()
    double currentTestDurationInMillis=currentTimeInMillis-startTimeInMillis
    //log.info(&quot;currentTestDurationInMillis ${currentTestDurationInMillis}&quot;)

    if(currentTestDurationInMillis&lt; testResultToIgnoreBeforeInMillis || currentTestDurationInMillis &gt;testResultToIgnoreAfterInMillis){
        prev.setIgnore()
        //log.info(&quot;Test result is ignored&quot;)
    }
}
</stringProp>
      </JSR223PostProcessor>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">New_Data_CHC_10.32.3.0_Run_4.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
